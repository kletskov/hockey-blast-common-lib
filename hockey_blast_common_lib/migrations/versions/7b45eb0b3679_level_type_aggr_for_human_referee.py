"""Level type aggr for human, referee

Revision ID: 7b45eb0b3679
Revises: 5cc9202e5fb0
Create Date: 2025-02-04 10:13:54.190190

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7b45eb0b3679'
down_revision = '5cc9202e5fb0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('level_stats_human',
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('human_id', sa.Integer(), nullable=False),
    sa.Column('games_total', sa.Integer(), nullable=True),
    sa.Column('games_total_rank', sa.Integer(), nullable=True),
    sa.Column('games_skater', sa.Integer(), nullable=True),
    sa.Column('games_skater_rank', sa.Integer(), nullable=True),
    sa.Column('games_referee', sa.Integer(), nullable=True),
    sa.Column('games_referee_rank', sa.Integer(), nullable=True),
    sa.Column('games_scorekeeper', sa.Integer(), nullable=True),
    sa.Column('games_scorekeeper_rank', sa.Integer(), nullable=True),
    sa.Column('games_goalie', sa.Integer(), nullable=True),
    sa.Column('games_goalie_rank', sa.Integer(), nullable=True),
    sa.Column('total_in_rank', sa.Integer(), nullable=True),
    sa.Column('first_game_id', sa.Integer(), nullable=True),
    sa.Column('last_game_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['first_game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['human_id'], ['humans.id'], ),
    sa.ForeignKeyConstraint(['last_game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('human_id', 'level_id', name='_human_level_stats_uc1')
    )
    with op.batch_alter_table('level_stats_human', schema=None) as batch_op:
        batch_op.create_index('idx_level_games_goalie1', ['level_id', 'games_goalie'], unique=False)
        batch_op.create_index('idx_level_games_referee1', ['level_id', 'games_referee'], unique=False)
        batch_op.create_index('idx_level_games_scorekeeper1', ['level_id', 'games_scorekeeper'], unique=False)
        batch_op.create_index('idx_level_games_skater1', ['level_id', 'games_skater'], unique=False)
        batch_op.create_index('idx_level_games_total1', ['level_id', 'games_total'], unique=False)

    op.create_table('level_stats_referee',
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('human_id', sa.Integer(), nullable=False),
    sa.Column('games_reffed', sa.Integer(), nullable=True),
    sa.Column('games_reffed_rank', sa.Integer(), nullable=True),
    sa.Column('penalties_given', sa.Integer(), nullable=True),
    sa.Column('penalties_given_rank', sa.Integer(), nullable=True),
    sa.Column('penalties_per_game', sa.Float(), nullable=True),
    sa.Column('penalties_per_game_rank', sa.Integer(), nullable=True),
    sa.Column('gm_given', sa.Integer(), nullable=True),
    sa.Column('gm_given_rank', sa.Integer(), nullable=True),
    sa.Column('gm_per_game', sa.Float(), nullable=True),
    sa.Column('gm_per_game_rank', sa.Integer(), nullable=True),
    sa.Column('total_in_rank', sa.Integer(), nullable=True),
    sa.Column('first_game_id', sa.Integer(), nullable=True),
    sa.Column('last_game_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['first_game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['human_id'], ['humans.id'], ),
    sa.ForeignKeyConstraint(['last_game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('human_id', 'level_id', name='_human_level_uc_referee1')
    )
    with op.batch_alter_table('level_stats_referee', schema=None) as batch_op:
        batch_op.create_index('idx_level_games_reffed1', ['level_id', 'games_reffed'], unique=False)
        batch_op.create_index('idx_level_gm_given1', ['level_id', 'gm_given'], unique=False)
        batch_op.create_index('idx_level_gm_per_game1', ['level_id', 'gm_per_game'], unique=False)
        batch_op.create_index('idx_level_penalties_given1', ['level_id', 'penalties_given'], unique=False)
        batch_op.create_index('idx_level_penalties_per_game1', ['level_id', 'penalties_per_game'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('level_stats_referee', schema=None) as batch_op:
        batch_op.drop_index('idx_level_penalties_per_game1')
        batch_op.drop_index('idx_level_penalties_given1')
        batch_op.drop_index('idx_level_gm_per_game1')
        batch_op.drop_index('idx_level_gm_given1')
        batch_op.drop_index('idx_level_games_reffed1')

    op.drop_table('level_stats_referee')
    with op.batch_alter_table('level_stats_human', schema=None) as batch_op:
        batch_op.drop_index('idx_level_games_total1')
        batch_op.drop_index('idx_level_games_skater1')
        batch_op.drop_index('idx_level_games_scorekeeper1')
        batch_op.drop_index('idx_level_games_referee1')
        batch_op.drop_index('idx_level_games_goalie1')

    op.drop_table('level_stats_human')
    # ### end Alembic commands ###
